name: Node.js CI con Seguridad

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  security-events: write
  pull-requests: write
  packages: write

jobs:
  build-and-test:
    name: Compilación y Pruebas Unitarias
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      # ==========================================
      # SAST - Inicializar CodeQL
      # ==========================================
      - name: Initialize CodeQL (SAST)
        uses: github/codeql-action/init@v3
        with:
          languages: javascript-typescript
          queries: security-and-quality

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      # ==========================================
      # SCA - Dependency Review (solo en PRs)
      # ==========================================
      - name: Dependency Review (SCA)
        if: github.event_name == 'pull_request'
        uses: actions/dependency-review-action@v4
        with:
          comment-summary-in-pr: true
          fail-on-severity: moderate

      - name: Build Project
        run: npm run build --if-present

      - name: Run Tests
        run: npm test

      - name: Generate Coverage Report
        if: matrix.node-version == '20.x'
        run: npm run test:coverage --if-present

      # ==========================================
      # SAST - Ejecutar Análisis CodeQL
      # ==========================================
      - name: Perform CodeQL Analysis (SAST)
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:javascript-typescript/node:${{ matrix.node-version }}"

      - name: Upload Coverage Reports
        if: matrix.node-version == '20.x'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

  package-and-publish:
    name: Package & Publish
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Sign in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=tag
            type=ref,event=pr
            type=sha,event-branch,prefix=,suffix=,format=short
            type=ref,event=branch,prefix=,suffix=,format=short

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
